/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Graphic.Loader;

import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Ing Lalux
 */
public class loadWindows7 extends javax.swing.JFrame {
    
    //Crear el MOTOR del Loader//
    public Motor Motor;
    private boolean solicitudEND=false;
    
    public synchronized boolean statusCancel (){
        return solicitudEND;
    }
    
    public synchronized void setStatusCancel(boolean status){
        solicitudEND=status;
    }
    
    
    //Crear Hilo de Refresh de Ventana//
    public class RefreshLoad extends Thread{
        @Override
        public void run(){
            while(Motor.motorActivo==true){
                //Actualizar las Variables en la Ventana//
                textProceso.setText(Motor.Operacion);
                textTimeTranscurrido.setText(time.AlgoritmsT.formatHrsMinsSeg(Motor.Cronometro.TimeTranscurrido));
                textOperacionActual.setText(Integer.toString(Motor.actualOperation));
                barLoad.setValue(Motor.Avance);
                
                if(Motor.numOperations==0){
                    textNumOperations.setText("Indeterminado...");
                    textTimeRestante.setText("Indeterminado..."); 
                }else{
                    textNumOperations.setText(Integer.toString(Motor.numOperations));
                    textTimeRestante.setText(time.AlgoritmsT.formatHrsMinsSeg(Motor.TimeRestante));
                }
                
                try {
                    //Esperar el Tiempo de Refresh//
                    RefreshLoad.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(loadWindows7.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    public RefreshLoad Refresh;
    
    
    /**
     * Creates new form loadWindows
     */
    public loadWindows7() {
        initComponents();
        Motor = new Motor("TiempoTranscurrido,TiempoRestante,Operacion,Avance");
        Refresh = new RefreshLoad();
    }
    
    public loadWindows7(int Operations) {
        initComponents();
        Motor = new Motor(Operations,"TiempoTranscurrido,TiempoRestante,Operacion,Avance");
        Refresh = new RefreshLoad();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fontTopWin = new javax.swing.JLabel();
        fontLoadBar = new javax.swing.JLabel();
        botonCancelar = new javax.swing.JButton();
        barLoad = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        textProceso = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textTimeTranscurrido = new javax.swing.JLabel();
        textTimeRestante = new javax.swing.JLabel();
        textOperacionActual = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textNumOperations = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fontTopWin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Graphic/Loader/topWin7.jpg"))); // NOI18N

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Proceso: ");

        textProceso.setText("...");

        jLabel2.setText("Tiempo Transcurrido: ");

        jLabel3.setText("Tiempo Restante: ");

        jLabel4.setText("Operacion: ");

        textTimeTranscurrido.setText("...");

        textTimeRestante.setText("...");

        textOperacionActual.setText("...");

        jLabel7.setText("de");

        textNumOperations.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(barLoad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(fontLoadBar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonCancelar)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textTimeRestante, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textTimeTranscurrido, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fontTopWin)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textOperacionActual, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(textNumOperations, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fontTopWin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textTimeTranscurrido)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textTimeRestante))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textOperacionActual)
                            .addComponent(jLabel7)
                            .addComponent(textNumOperations))
                        .addGap(28, 28, 28)
                        .addComponent(barLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fontLoadBar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botonCancelar)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Descripcion: Avanzar el Loader una Operacion
     *
     * @param   Operacion String de Operacion a Realizar
     */
    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
    //Variables Locales e Inicializacion//
        boolean condiciones=true;
	String motivo="Indeterminado";
    //Comprobar Condiciones Iniciales//
		
	//Comenzar Proceso//
        if(condiciones==true){
            setStatusCancel(true);
        }else{
            System.out.println("ERROR en botonCancelar, motivo: "+motivo);
	}
    //Terminar Proceso//
	System.out.println("Proceso botonCancelar Terminado");
    }//GEN-LAST:event_botonCancelarActionPerformed

    
    /**
     * Descripcion: Avanzar el Loader una Operacion
     *              Esta Funcion no debe tener el SYNCRONIZED, porque se traba
     *
     * @param   Operacion String de Operacion a Realizar
     */
    public  void Avanzar(String Operacion){
    //Variables Locales e Inicializacion//
    boolean condiciones=true;
	String motivo="Indeterminado";
    //Comprobar Condiciones Iniciales//
		
	//Comenzar Proceso//
        if(condiciones==true){
            Motor.Avanzar(Operacion);
            
            //Actualizar la Operacion Inmediatamente//
            textProceso.setText(Operacion);
            
            //Activar el Refresh con la Primer Operacion
            if(Motor.actualOperation==1){
                Refresh.start();
            }
            
            //Cerrar la ventana cuando el Motor Termine//
            if(Motor.motorActivo==false){
                this.dispose();
            }
        }else{
            System.out.println("ERROR en Avanzar, motivo: "+motivo);
	}
    //Terminar Proceso//
	//System.out.println("Proceso Avanzar Terminado");
    }
    
    
    
    /**
     * Descripcion: Terminar el Loader cuando se desee
     *              No Agregar SYNCRONIZED a esta funcion, si no no funciona
     */
    public void Terminar(){
    //Variables Locales e Inicializacion//
    boolean condiciones=true;
	String motivo="Indeterminado";
    //Comprobar Condiciones Iniciales//
		
	//Comenzar Proceso//
        if(condiciones==true){
            Motor.Terminar();
            System.out.println("Terminando LoadWindows7");
            this.dispose();
        }else{
            System.out.println("ERROR en Terminar, motivo: "+motivo);
	}
    //Terminar Proceso//
	//System.out.println("Proceso Terminar Terminado");
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loadWindows7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loadWindows7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loadWindows7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loadWindows7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new loadWindows7().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barLoad;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JLabel fontLoadBar;
    private javax.swing.JLabel fontTopWin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel textNumOperations;
    private javax.swing.JLabel textOperacionActual;
    private javax.swing.JLabel textProceso;
    private javax.swing.JLabel textTimeRestante;
    private javax.swing.JLabel textTimeTranscurrido;
    // End of variables declaration//GEN-END:variables
}
